{
  "Azure Storage Account with Security": {
    "prefix": "az-storage-secure",
    "body": [
      "// ${1:Description} - Secure storage account with encryption and access controls",
      "// Environment: ${2:environment}, Replication: ${3:Standard_LRS}, Access: ${4:private}",
      "@description('${1:Description}')",
      "resource ${5:storageAccount} 'Microsoft.Storage/storageAccounts@2023-01-01' = {",
      "  name: ${6:storageAccountName}",
      "  location: ${7:location}",
      "  sku: {",
      "    name: '${3:Standard_LRS}'",
      "  }",
      "  kind: 'StorageV2'",
      "  properties: {",
      "    // Security and encryption configuration",
      "    supportsHttpsTrafficOnly: true",
      "    minimumTlsVersion: 'TLS1_2'",
      "    allowBlobPublicAccess: false",
      "    allowSharedKeyAccess: false",
      "    $0",
      "  }",
      "  tags: standardTags",
      "}"
    ],
    "description": "Secure storage account template optimized for Copilot completion"
  },
  "Azure Key Vault with RBAC": {
    "prefix": "az-keyvault-rbac",
    "body": [
      "// ${1:Description} - Key Vault with RBAC and network restrictions",
      "// Purpose: ${2:secrets/certificates/keys}, Access: ${3:private-endpoint}",
      "@description('${1:Description}')",
      "resource ${4:keyVault} 'Microsoft.KeyVault/vaults@2023-02-01' = {",
      "  name: ${5:keyVaultName}",
      "  location: ${6:location}",
      "  properties: {",
      "    sku: {",
      "      family: 'A'",
      "      name: 'standard'",
      "    }",
      "    tenantId: tenant().tenantId",
      "    enableRbacAuthorization: true",
      "    enableSoftDelete: true",
      "    softDeleteRetentionInDays: 7",
      "    enablePurgeProtection: true",
      "    networkAcls: {",
      "      defaultAction: 'Deny'",
      "      bypass: 'AzureServices'",
      "      $0",
      "    }",
      "  }",
      "  tags: standardTags",
      "}"
    ],
    "description": "Key Vault with RBAC and security best practices"
  },
  "Azure Web App with Monitoring": {
    "prefix": "az-webapp-complete",
    "body": [
      "// ${1:Description} - Production web app with monitoring and scaling",
      "// Tier: ${2:PremiumV3}, Instances: ${3:1-10}, SSL: ${4:enabled}",
      "",
      "// App Service Plan with auto-scaling",
      "resource ${5:appServicePlan} 'Microsoft.Web/serverfarms@2022-09-01' = {",
      "  name: '\\${${6:appName}}-\\${environment}-plan'",
      "  location: ${7:location}",
      "  sku: {",
      "    name: environment == 'prod' ? 'P1v3' : 'B1'",
      "    capacity: environment == 'prod' ? 2 : 1",
      "  }",
      "  properties: {",
      "    reserved: false",
      "  }",
      "  tags: standardTags",
      "}",
      "",
      "// Web Application with security headers",
      "resource ${8:webApp} 'Microsoft.Web/sites@2022-09-01' = {",
      "  name: '\\${${6:appName}}-\\${environment}-app'",
      "  location: ${7:location}",
      "  properties: {",
      "    serverFarmId: ${5:appServicePlan}.id",
      "    httpsOnly: true",
      "    siteConfig: {",
      "      minTlsVersion: '1.2'",
      "      ftpsState: 'Disabled'",
      "      $0",
      "    }",
      "  }",
      "  tags: standardTags",
      "}",
      "",
      "// Application Insights for monitoring",
      "resource ${9:appInsights} 'Microsoft.Insights/components@2020-02-02' = {",
      "  name: '\\${${6:appName}}-\\${environment}-insights'",
      "  location: ${7:location}",
      "  kind: 'web'",
      "  properties: {",
      "    Application_Type: 'web'",
      "    Request_Source: 'rest'",
      "  }",
      "  tags: standardTags",
      "}"
    ],
    "description": "Complete web app setup with monitoring"
  },
  "Bicep Module Template": {
    "prefix": "bicep-module",
    "body": [
      "// ${1:Module Name} - ${2:Description of module purpose}",
      "// Dependencies: ${3:list dependencies}",
      "// Outputs: ${4:describe outputs}",
      "",
      "targetScope = '${5|resourceGroup,subscription,tenant,managementGroup|}'",
      "",
      "// Required parameters",
      "@description('${6:Parameter description}')",
      "param ${7:parameterName} string",
      "",
      "@description('Azure region for resources')",
      "param location string = resourceGroup().location",
      "",
      "@description('Environment designation')",
      "@allowed(['dev', 'test', 'prod'])",
      "param environment string",
      "",
      "// Optional parameters with defaults",
      "@description('${8:Optional parameter description}')",
      "param ${9:optionalParam} string = '${10:defaultValue}'",
      "",
      "// Variables for resource naming and configuration",
      "var resourcePrefix = '${11:prefix}'",
      "var standardTags = {",
      "  Environment: environment",
      "  ManagedBy: 'bicep'",
      "  CreatedDate: utcNow('yyyy-MM-dd')",
      "  Purpose: '${12:resource purpose}'",
      "}",
      "",
      "// Main resource definition",
      "resource ${13:resourceName} '${14:resourceType}@${15:apiVersion}' = {",
      "  name: '\\${resourcePrefix}-\\${environment}-${16:resourceSuffix}'",
      "  location: location",
      "  properties: {",
      "    $0",
      "  }",
      "  tags: standardTags",
      "}",
      "",
      "// Outputs for consumption by other modules",
      "@description('Resource ID of created ${1:Module Name}')",
      "output ${17:outputName}Id string = ${13:resourceName}.id",
      "",
      "@description('Resource name of created ${1:Module Name}')",
      "output ${17:outputName}Name string = ${13:resourceName}.name"
    ],
    "description": "Complete Bicep module template with best practices"
  },
  "Environment Configuration": {
    "prefix": "bicep-env-config",
    "body": [
      "// Environment-specific configuration for resource sizing and features",
      "var environmentConfig = {",
      "  dev: {",
      "    ${1:vmSize}: '${2:Standard_B1s}'",
      "    ${3:instanceCount}: 1",
      "    ${4:enableBackup}: false",
      "    ${5:enableMonitoring}: true",
      "    ${6:autoShutdown}: true",
      "    ${7:storageReplication}: 'Standard_LRS'",
      "    ${8:dbTier}: 'Basic'",
      "  }",
      "  test: {",
      "    ${1:vmSize}: '${9:Standard_B2s}'",
      "    ${3:instanceCount}: 2",
      "    ${4:enableBackup}: true",
      "    ${5:enableMonitoring}: true",
      "    ${6:autoShutdown}: true",
      "    ${7:storageReplication}: 'Standard_LRS'",
      "    ${8:dbTier}: 'Standard'",
      "  }",
      "  prod: {",
      "    ${1:vmSize}: '${10:Standard_D2s_v3}'",
      "    ${3:instanceCount}: 3",
      "    ${4:enableBackup}: true",
      "    ${5:enableMonitoring}: true",
      "    ${6:autoShutdown}: false",
      "    ${7:storageReplication}: 'Standard_GRS'",
      "    ${8:dbTier}: 'Premium'",
      "  }",
      "}",
      "",
      "// Current environment configuration",
      "var currentConfig = environmentConfig[environment]",
      "$0"
    ],
    "description": "Environment-specific configuration pattern for Bicep"
  }
}