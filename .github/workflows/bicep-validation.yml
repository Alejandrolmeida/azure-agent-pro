name: Bicep Validation and Linting

on:
  push:
    branches: [main, develop]
    paths:
      - "bicep/**"
      - ".github/workflows/bicep-validation.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "bicep/**"
      - ".github/workflows/bicep-validation.yml"

env:
  # Configure these values for your environment
  PROJECT_NAME: azure-agent-pro # Azure Agent Pro project name
  AZURE_RESOURCE_GROUP: ${{ vars.CI_RESOURCE_GROUP || 'azure-agent-pro-ci' }}
  AZURE_LOCATION: ${{ vars.DEFAULT_LOCATION || 'eastus' }}

jobs:
  bicep-validation:
    name: Validate Bicep Templates
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/setup-azure-cli@v2
        with:
          version: "latest"

      - name: Azure Login using OIDC
        if: false  # Disabled for educational project - no real Azure credentials
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install Bicep CLI
        run: |
          az bicep install
          az bicep version

      - name: Bicep Linting
        run: |
          echo "🔍 Running Bicep linting..."
          for file in bicep/**/*.bicep; do
            if [ -f "$file" ]; then
              echo "Linting: $file"
              az bicep build --file "$file" --outdir temp/
            fi
          done

      - name: Bicep Validation - Development
        if: false  # Disabled for educational project - requires real Azure subscription
        run: |
          echo "✅ Validating Bicep templates for development environment..."
          az deployment group validate \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file bicep/main.bicep \
            --parameters @bicep/parameters/dev.parameters.json \
            --verbose

      - name: Bicep What-If Analysis
        if: false  # Disabled for educational project - requires real Azure subscription
        run: |
          echo "📊 Running What-If analysis..."
          az deployment group what-if \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --template-file bicep/main.bicep \
            --parameters @bicep/parameters/dev.parameters.json \
            --result-format FullResourcePayloads

      - name: Security and Best Practices Check
        run: |
          echo "🔒 Running security checks..."
          # Verificar que no hay hardcoded secrets
          if grep -r "password\|secret\|key" bicep/ --include="*.bicep" | grep -v "KeyVault\|secureString\|@secure"; then
            echo "❌ Potential hardcoded secrets found!"
            exit 1
          fi

          # Verificar uso de secureString para parámetros sensibles
          if grep -r "password\|secret\|key" bicep/ --include="*.bicep" | grep -v "@secure"; then
            echo "⚠️ Consider using @secure() decorator for sensitive parameters"
          fi

          echo "✅ Security checks passed!"

      - name: Upload Bicep Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bicep-compiled-templates
          path: temp/*.json
          retention-days: 30

  bicep-test:
    name: Test Bicep Deployments
    runs-on: ubuntu-latest
    needs: bicep-validation
    if: false  # Disabled for educational project - requires real Azure subscription and resources

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/setup-azure-cli@v2

      - name: Azure Login using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Test Resource Group
        run: |
          TEST_RG="${{ env.PROJECT_NAME }}-test-${{ github.run_number }}"
          echo "TEST_RESOURCE_GROUP=$TEST_RG" >> $GITHUB_ENV
          az group create --name "$TEST_RG" --location ${{ env.AZURE_LOCATION }}

      - name: Deploy Test Infrastructure
        run: |
          echo "🚀 Deploying test infrastructure..."
          az deployment group create \
            --resource-group ${{ env.TEST_RESOURCE_GROUP }} \
            --template-file bicep/main.bicep \
            --parameters @bicep/parameters/dev.parameters.json \
            --parameters environmentName=test-${{ github.run_number }}

      - name: Cleanup Test Resources
        if: always()
        run: |
          echo "🧹 Cleaning up test resources..."
          az group delete --name ${{ env.TEST_RESOURCE_GROUP }} --yes --no-wait
