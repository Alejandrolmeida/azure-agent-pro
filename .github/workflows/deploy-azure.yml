name: Deploy to Azure

on:
  push:
    branches: [main]
    paths:
      - "bicep/**"
      - ".github/workflows/deploy-azure.yml"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - test
          - stage
          - prod
      confirm_production:
        description: 'Confirm production deployment (type "CONFIRM" for prod)'
        required: false
        default: ""

env:
  # Configure these values for your environment
  PROJECT_NAME: azure-agent-pro # Azure Agent Pro project name
  AZURE_LOCATION: ${{ vars.DEFAULT_LOCATION || 'eastus' }}

jobs:
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: development

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/setup-azure-cli@v2

      - name: Azure Login using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        run: |
          RG_NAME="${{ env.PROJECT_NAME }}-dev-rg"
          echo "RESOURCE_GROUP=$RG_NAME" >> $GITHUB_ENV
          az group create --name "$RG_NAME" --location ${{ env.AZURE_LOCATION }}

      - name: Deploy Infrastructure
        run: |
          echo "üöÄ Deploying to Development environment..."
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file bicep/main.bicep \
            --parameters @bicep/parameters/dev.parameters.json \
            --parameters deploymentTimestamp="$(date -u +%Y%m%d-%H%M%S)" \
            --name "dev-deployment-${{ github.run_number }}"

      - name: Get Deployment Outputs
        run: |
          echo "üìã Getting deployment outputs..."
          az deployment group show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name "dev-deployment-${{ github.run_number }}" \
            --query properties.outputs

  deploy-environment:
    name: Deploy to Selected Environment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment: ${{ inputs.environment }}

    steps:
      - name: Validate Production Deployment
        if: inputs.environment == 'prod'
        run: |
          if [ "${{ inputs.confirm_production }}" != "CONFIRM" ]; then
            echo "‚ùå Production deployment requires confirmation. Please type 'CONFIRM' in the confirm_production input."
            exit 1
          fi
          echo "‚úÖ Production deployment confirmed"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/setup-azure-cli@v2

      - name: Azure Login using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Environment Variables
        run: |
          ENV="${{ inputs.environment }}"
          RG_NAME="${{ env.PROJECT_NAME }}-${ENV}-rg"
          echo "RESOURCE_GROUP=$RG_NAME" >> $GITHUB_ENV
          echo "ENVIRONMENT=$ENV" >> $GITHUB_ENV

          # Set location based on environment - customize as needed
          case $ENV in
            prod|stage)
              echo "AZURE_LOCATION=${{ vars.PROD_LOCATION || 'eastus' }}" >> $GITHUB_ENV
              ;;
            test)
              echo "AZURE_LOCATION=${{ vars.TEST_LOCATION || 'westus2' }}" >> $GITHUB_ENV
              ;;
            *)
              echo "AZURE_LOCATION=${{ env.AZURE_LOCATION }}" >> $GITHUB_ENV
              ;;
          esac

      - name: Create Resource Group
        run: |
          az group create --name "${{ env.RESOURCE_GROUP }}" --location ${{ env.AZURE_LOCATION }}

      - name: Pre-deployment Validation
        run: |
          echo "üîç Running pre-deployment validation..."
          az deployment group validate \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file bicep/main.bicep \
            --parameters @bicep/parameters/${{ env.ENVIRONMENT }}.parameters.json \
            --parameters deploymentTimestamp="$(date -u +%Y%m%d-%H%M%S)"

      - name: Deploy Infrastructure
        run: |
          echo "üöÄ Deploying to ${{ env.ENVIRONMENT }} environment..."
          az deployment group create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file bicep/main.bicep \
            --parameters @bicep/parameters/${{ env.ENVIRONMENT }}.parameters.json \
            --parameters deploymentTimestamp="$(date -u +%Y%m%d-%H%M%S)" \
            --name "${{ env.ENVIRONMENT }}-deployment-${{ github.run_number }}" \
            --verbose

      - name: Post-deployment Verification
        run: |
          echo "‚úÖ Verifying deployment..."

          # Check if resources were created successfully
          DEPLOYMENT_STATUS=$(az deployment group show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name "${{ env.ENVIRONMENT }}-deployment-${{ github.run_number }}" \
            --query properties.provisioningState -o tsv)
            
          if [ "$DEPLOYMENT_STATUS" != "Succeeded" ]; then
            echo "‚ùå Deployment failed with status: $DEPLOYMENT_STATUS"
            exit 1
          fi

          echo "‚úÖ Deployment completed successfully!"

      - name: Get Deployment Outputs
        run: |
          echo "üìã Deployment outputs:"
          az deployment group show \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name "${{ env.ENVIRONMENT }}-deployment-${{ github.run_number }}" \
            --query properties.outputs --output table

      - name: Tag Resources
        run: |
          echo "üè∑Ô∏è Tagging resources..."
          az group update \
            --name ${{ env.RESOURCE_GROUP }} \
            --set tags.Environment=${{ env.ENVIRONMENT }} \
            tags.DeployedBy="GitHub-Actions" \
            tags.Repository="${{ github.repository }}" \
            tags.CommitSha="${{ github.sha }}" \
            tags.DeploymentDate="$(date -u +%Y-%m-%d)" \
            tags.RunNumber="${{ github.run_number }}"

  notify-deployment:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-environment]
    if: always() && github.event_name == 'workflow_dispatch'

    steps:
      - name: Deployment Success
        if: needs.deploy-environment.result == 'success'
        run: |
          echo "‚úÖ Deployment to ${{ inputs.environment }} completed successfully!"
          echo "üîó Check the Azure portal for deployed resources"

      - name: Deployment Failure
        if: needs.deploy-environment.result == 'failure'
        run: |
          echo "‚ùå Deployment to ${{ inputs.environment }} failed!"
          echo "Please check the workflow logs for more details"
          exit 1
